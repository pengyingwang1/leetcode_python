class Solution(object):
    def combinationSum2(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        if not candidates:
            return []
        res = []
        candidates.sort()
        self.dfs(candidates, target, [], 0, res)
        return res
    def dfs(self, candidates, target, curr, index, res):
        if target == 0:
            res.append(curr[:])
            return
        for i in range(index, len(candidates)):
            if candidates[i] > target:
                return
            #res去重 candidate里重复的不计数
            if i != index and candidates[i] == candidates[i-1]:
                continue
            curr.append(candidates[i])
            #i+1 不可从list重复取数据
            self.dfs(candidates, target - candidates[i], curr, i, res)
            curr.pop()
        