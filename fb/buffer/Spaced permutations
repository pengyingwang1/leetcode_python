def spacePermute(n):
    res = []
    def dfs(num, expr):
        if num == 0:
            res.append(expr[:])
            return
        for i in range(2 * n - num):
            nex = num  + i
            if expr[i] == 0 and expr[nex] == 0:
                expr[i] = num
                expr[nex] = num
                dfs(num-1 , expr)
    dfs(n, [0] * 2 * n)
    return res

