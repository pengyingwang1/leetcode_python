# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
    """
    time O(n)
    """
        if not root:
            return 0
        self.res = float('-inf')
        self.dfs(root)
        return self.res
    def dfs(self, root):
        #return type: int
        if not root:
            return 0
        #prune
        left = self.dfs(root.left) 
        left = left if left > 0 else 0 
        right = self.dfs(root.right) 
        right = right if right > 0 else 0
        self.res = max(self.res, left + right + root.val)
        return root.val + max(left, right)
        