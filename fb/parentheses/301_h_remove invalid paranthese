"""
返回最少的， count
"""
def removeInvalidParentheses(s):
    if not s:
        return []
    return removeInvalid(s,0, '(', ')')

def removeInvalid(s, start, lc, rc):
    counter = 0
    for i in range(start, len(s)):
        if s[i] == lc:
            counter += 1
        elif s[i] == rc:
            counter -= 1
        if counter <0:
            return removeInvalid(s[0:i] + s[i+1:],i,lc,rc)
    str = s[::-1]
    #防止 ）（）（
    if lc == '(':
        return removeInvalid(str,0,rc,lc)
    else:
        return str
    """
    def Remove(s):
    s = list(s)
    countL = 0
    for index, c in enumerate(s):
        if c == ')':
            if not countL:
                s[index] = ""
            else:
                countL -= 1
        elif c == '(':
            countL += 1
    countR = 0
    for i in range(len(s)-1,-1,-1):
        c = s[i]
        if c == '(':
            if not countR:
                s[i] = ""
            else:
                countR -= 1
        elif c == ')':
            countR += 1
    return ''.join(s)

    """
