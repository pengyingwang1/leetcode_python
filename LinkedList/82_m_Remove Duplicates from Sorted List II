#Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None
class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head or not head.next:
            return head
        dummy = ListNode(-1)
        prev = dummy
        dummy.next = head
        cur = head
        while cur and cur.next:
            #no duplicate, continue to another loop
            if cur.next and cur.val != cur.next.val:
                prev = prev.next
                cur = cur.next
                continue
            #duplicate, jump to next.next
            while cur.next and cur.val == cur.next.val:
                cur.next = cur.next.next
            cur = cur.next
            #remove first duplicate
            prev.next = prev.next.next
            
        return dummy.next
                
"""
time: O(n)
space:O(n) new linkedlist
[1,2,3,3,4,4,5]
output:
[1,2,5]    
"""   